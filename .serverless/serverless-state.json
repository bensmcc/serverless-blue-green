{
  "service": {
    "service": "serverless-blue-green",
    "serviceObject": {
      "name": "serverless-blue-green"
    },
    "provider": {
      "name": "aws",
      "memorySize": 128,
      "runtime": "nodejs14.x",
      "region": "us-east-1",
      "lambdaHashingVersion": "20201221",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "codedeploy:*"
          ],
          "Resource": [
            "*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "lambda:InvokeFunction",
            "lambda:InvokeAsync"
          ],
          "Resource": [
            "*"
          ]
        }
      ],
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HelloLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-blue-green-dev-hello"
            }
          },
          "PreHookLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-blue-green-dev-preHook"
            }
          },
          "PostHookLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-blue-green-dev-postHook"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-blue-green",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-blue-green-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-blue-green-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "codedeploy:*"
                        ],
                        "Resource": [
                          "*"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction",
                          "lambda:InvokeAsync"
                        ],
                        "Resource": [
                          "*"
                        ]
                      },
                      {
                        "Action": [
                          "codedeploy:PutLifecycleEventHookExecutionStatus"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessbluegreendevDeploymentApplication}/${HelloLambdaFunctionDeploymentGroup}"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-blue-green",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HelloLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-blue-green/dev/1622466579210-2021-05-31T13:09:39.210Z/serverless-blue-green.zip"
              },
              "Handler": "handler.hello",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-blue-green-dev-hello",
              "MemorySize": 128,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HelloLogGroup"
            ]
          },
          "PreHookLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-blue-green/dev/1622466579210-2021-05-31T13:09:39.210Z/serverless-blue-green.zip"
              },
              "Handler": "hooks.pre",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-blue-green-dev-preHook",
              "MemorySize": 128,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "HELLOFN": {
                    "Fn::Sub": "arn:aws:lambda:us-east-1:${AWS::AccountId}:function:serverless-blue-green-dev-hello"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PreHookLogGroup"
            ]
          },
          "PostHookLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-blue-green/dev/1622466579210-2021-05-31T13:09:39.210Z/serverless-blue-green.zip"
              },
              "Handler": "hooks.post",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-blue-green-dev-postHook",
              "MemorySize": 128,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PostHookLogGroup"
            ]
          },
          "HelloLambdaVersionTvFsRk2ukadsLq4rKmKB7m05oMo6eFbOCNppkZRcs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "CodeSha256": "HnLGzzy+dGU86bBRZV/fJteUi3oSMg6oFbuTapC+kvE="
            }
          },
          "PreHookLambdaVersionDQAONtHzQOiHEWl62EtSc20JNvh7EPe5ItHg2DKao": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PreHookLambdaFunction"
              },
              "CodeSha256": "HnLGzzy+dGU86bBRZV/fJteUi3oSMg6oFbuTapC+kvE="
            }
          },
          "PostHookLambdaVersionprfDEGdxpByB1ixq4UI6DwcDFgiElToJbDtNSw2kQE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostHookLambdaFunction"
              },
              "CodeSha256": "HnLGzzy+dGU86bBRZV/fJteUi3oSMg6oFbuTapC+kvE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-blue-green",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceHello": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "hello",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHello"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Ref": "HelloLambdaFunctionAliasLive"
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1622466568274": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHelloGet"
            ]
          },
          "HelloLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Ref": "HelloLambdaFunctionAliasLive"
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ServerlessbluegreendevDeploymentApplication": {
            "Type": "AWS::CodeDeploy::Application",
            "Properties": {
              "ComputePlatform": "Lambda"
            }
          },
          "CodeDeployServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited",
                "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "sts:AssumeRole"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "codedeploy.amazonaws.com"
                      ]
                    }
                  }
                ]
              }
            }
          },
          "HelloLambdaFunctionDeploymentGroup": {
            "Type": "AWS::CodeDeploy::DeploymentGroup",
            "Properties": {
              "ApplicationName": {
                "Ref": "ServerlessbluegreendevDeploymentApplication"
              },
              "AutoRollbackConfiguration": {
                "Enabled": true,
                "Events": [
                  "DEPLOYMENT_FAILURE",
                  "DEPLOYMENT_STOP_ON_ALARM",
                  "DEPLOYMENT_STOP_ON_REQUEST"
                ]
              },
              "DeploymentConfigName": {
                "Fn::Sub": [
                  "CodeDeployDefault.Lambda${ConfigName}",
                  {
                    "ConfigName": "AllAtOnce"
                  }
                ]
              },
              "DeploymentStyle": {
                "DeploymentType": "BLUE_GREEN",
                "DeploymentOption": "WITH_TRAFFIC_CONTROL"
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "CodeDeployServiceRole",
                  "Arn"
                ]
              }
            }
          },
          "HelloLambdaFunctionAliasLive": {
            "Type": "AWS::Lambda::Alias",
            "Properties": {
              "FunctionVersion": {
                "Fn::GetAtt": [
                  "HelloLambdaVersionTvFsRk2ukadsLq4rKmKB7m05oMo6eFbOCNppkZRcs",
                  "Version"
                ]
              },
              "FunctionName": {
                "Ref": "HelloLambdaFunction"
              },
              "Name": "Live"
            },
            "UpdatePolicy": {
              "CodeDeployLambdaAliasUpdate": {
                "ApplicationName": {
                  "Ref": "ServerlessbluegreendevDeploymentApplication"
                },
                "AfterAllowTrafficHook": {
                  "Ref": "PostHookLambdaFunction"
                },
                "BeforeAllowTrafficHook": {
                  "Ref": "PreHookLambdaFunction"
                },
                "DeploymentGroupName": {
                  "Ref": "HelloLambdaFunctionDeploymentGroup"
                }
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-blue-green-dev-ServerlessDeploymentBucketName"
            }
          },
          "HelloLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HelloLambdaVersionTvFsRk2ukadsLq4rKmKB7m05oMo6eFbOCNppkZRcs"
            },
            "Export": {
              "Name": "sls-serverless-blue-green-dev-HelloLambdaFunctionQualifiedArn"
            }
          },
          "PreHookLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PreHookLambdaVersionDQAONtHzQOiHEWl62EtSc20JNvh7EPe5ItHg2DKao"
            },
            "Export": {
              "Name": "sls-serverless-blue-green-dev-PreHookLambdaFunctionQualifiedArn"
            }
          },
          "PostHookLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostHookLambdaVersionprfDEGdxpByB1ixq4UI6DwcDFgiElToJbDtNSw2kQE"
            },
            "Export": {
              "Name": "sls-serverless-blue-green-dev-PostHookLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-blue-green-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-typescript",
      "serverless-plugin-canary-deployments",
      "serverless-pseudo-parameters"
    ],
    "pluginsData": {},
    "functions": {
      "hello": {
        "handler": "handler.hello",
        "events": [
          {
            "http": {
              "path": "hello",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "deploymentSettings": {
          "type": "AllAtOnce",
          "alias": "Live",
          "preTrafficHook": "preHook",
          "postTrafficHook": "postHook"
        },
        "name": "serverless-blue-green-dev-hello",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": []
        },
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "HelloLambdaVersionTvFsRk2ukadsLq4rKmKB7m05oMo6eFbOCNppkZRcs"
      },
      "preHook": {
        "handler": "hooks.pre",
        "environment": {
          "HELLOFN": "arn:aws:lambda:us-east-1:#{AWS::AccountId}:function:serverless-blue-green-dev-hello"
        },
        "events": [],
        "name": "serverless-blue-green-dev-preHook",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": []
        },
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PreHookLambdaVersionDQAONtHzQOiHEWl62EtSc20JNvh7EPe5ItHg2DKao"
      },
      "postHook": {
        "handler": "hooks.post",
        "events": [],
        "name": "serverless-blue-green-dev-postHook",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": []
        },
        "memory": 128,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "PostHookLambdaVersionprfDEGdxpByB1ixq4UI6DwcDFgiElToJbDtNSw2kQE"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "D:\\source\\serverless-blue-green\\.build\\.serverless\\serverless-blue-green.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-blue-green/dev/1622466579210-2021-05-31T13:09:39.210Z",
    "artifact": "serverless-blue-green.zip"
  }
}